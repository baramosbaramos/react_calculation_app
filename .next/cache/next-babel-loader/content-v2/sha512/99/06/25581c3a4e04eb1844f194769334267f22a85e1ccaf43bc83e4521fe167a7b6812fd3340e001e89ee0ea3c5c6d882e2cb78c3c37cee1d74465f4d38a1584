{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nvar initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n};\n\nfunction calcReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ENTER':\n      var data2 = state.data.slice();\n      var s = action.value;\n      data2.unshift(s);\n      var number2 = state.number.slice();\n      number2.unshift(num);\n      var result = state.result * 1 + num * 1;\n      return {\n        message: 'ENTER',\n        data: data2,\n        number: number2,\n        result: result\n      };\n\n    case 'RESET':\n      return {\n        message: 'RESET',\n        data: [],\n        number: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(calcReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/sou/Desktop/next_sample/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","calcReducer","state","action","type","data2","slice","s","value","unshift","number2","num","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,IAAI,EAAC,EAFO;AAGZC,EAAAA,MAAM,EAAC,EAHK;AAIZC,EAAAA,MAAM,EAAC;AAJK,CAAhB;;AAOA,SAASC,WAAT,GAA6C;AAAA,MAAxBC,KAAwB,uEAAhBN,OAAgB;AAAA,MAAPO,MAAO;;AACzC,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AACA,UAAIG,OAAO,GAAGR,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAI,MAAAA,OAAO,CAACD,OAAR,CAAgBE,GAAhB;AACA,UAAIX,MAAM,GAAIE,KAAK,CAACF,MAAN,GAAe,CAAhB,GAAsBW,GAAG,GAAG,CAAzC;AACA,aAAO;AACHd,QAAAA,OAAO,EAAC,OADL;AAEHC,QAAAA,IAAI,EAACO,KAFF;AAGHN,QAAAA,MAAM,EAACW,OAHJ;AAIHV,QAAAA,MAAM,EAACA;AAJJ,OAAP;;AAOJ,SAAK,OAAL;AACI,aAAO;AACHH,QAAAA,OAAO,EAAC,OADL;AAEHC,QAAAA,IAAI,EAAC,EAFF;AAGHC,QAAAA,MAAM,EAAC,EAHJ;AAIHC,QAAAA,MAAM,EAAC;AAJJ,OAAP;;AAOJ;AACI,aAAOE,KAAP;AAzBR;AA2BH;;AAED,OAAO,SAASU,SAAT,GAAmC;AAAA,MAAhBV,KAAgB,uEAARN,OAAQ;AACtC,SAAOH,WAAW,CAACQ,WAAD,EAAcC,KAAd,EAAqBR,eAAe,CAACC,eAAD,CAApC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nconst initial = {\n    message:'START',\n    data:[],\n    number:[],\n    result:0\n}\n\nfunction calcReducer(state = initial, action){\n    switch(action.type){\n\n        case 'ENTER':\n            let data2 = state.data.slice();\n            let s = action.value;\n            data2.unshift(s);\n            let number2 = state.number.slice();\n            number2.unshift(num);\n            let result = (state.result * 1) + (num * 1);\n            return {\n                message:'ENTER',\n                data:data2,\n                number:number2,\n                result:result\n            };\n\n        case 'RESET':\n            return {\n                message:'RESET',\n                data:[],\n                number:[],\n                result:0\n            };\n        \n        default:\n            return state;\n    }\n}\n\nexport function initStore(state = initial){\n    return createStore(calcReducer, state, applyMiddleware(thunkMiddleware))\n}"]},"metadata":{},"sourceType":"module"}